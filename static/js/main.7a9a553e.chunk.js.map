{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","api.ts","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","query","onChangeQuery","onAddMovie","onSubmit","error","loading","_Fragment","htmlFor","value","type","id","placeholder","classNames","onChange","disabled","onClick","App","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","setMovies","_useState5","_useState6","receivedMovie","setReceivedMovie","_useState7","_useState8","setLoading","_useState9","_useState10","setError","event","target","some","concat","_toConsumableArray","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","data","Title","Plot","Poster","imdbID","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a9a553e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { ResponseError } from '../../types/ReponseError';\n\ntype Props = {\n  query: string,\n  onChangeQuery: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  movie: Movie | null,\n  onAddMovie: () => void,\n  onSubmit: (event: React.FormEvent) => void,\n  error: ResponseError | null,\n  loading: boolean,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  query,\n  onChangeQuery,\n  movie,\n  onAddMovie,\n  onSubmit,\n  error,\n  loading,\n}) => {\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={query}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error,\n              })}\n              onChange={onChangeQuery}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!query}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': loading,\n              })}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={onAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { getMovie } from './api';\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst POSTER = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [receivedMovie, setReceivedMovie] = useState<Movie | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<ResponseError | null>(null);\n\n  const onSubmitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setLoading(true);\n\n    getMovie(query)\n      .then((data: MovieData | ResponseError) => {\n        if ('Poster' in data) {\n          setReceivedMovie({\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: data.Poster === 'N/A' ? POSTER : data.Poster,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n            imdbId: data.imdbID,\n          });\n        } else {\n          setError(data);\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const onAddMovie = () => {\n    if (!movies.some(movie => movie.imdbId === receivedMovie?.imdbId)) {\n      setMovies([...movies, receivedMovie] as Movie[]);\n    }\n\n    setQuery('');\n    setReceivedMovie(null);\n  };\n\n  const onChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError(null);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          query={query}\n          onChangeQuery={onChangeQuery}\n          movie={receivedMovie}\n          onAddMovie={onAddMovie}\n          onSubmit={onSubmitForm}\n          error={error}\n          loading={loading}\n        />\n      </div>\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d755dd74';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}